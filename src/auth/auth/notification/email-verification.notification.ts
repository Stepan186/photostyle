import { BaseNotification } from '../../../notifications/channels/base/base-notification';
import {
    IEmail,
    IEmailNotification,
    IMailNotifiable,
} from '../../../notifications/channels/email/email-notification.channel';
import { createMailgen } from '../../../email-utils/create-mailgen';
import * as process from 'process';

export class EmailVerificationNotification extends BaseNotification implements IEmailNotification {
    private readonly code: string;

    constructor(code: string) {
        super();
        this.code = code;
    }

    toMail(_notifiable: IMailNotifiable): IEmail {
        const html = createMailgen().generate({
            body: {
                greeting: 'üëã –î–æ–±—Ä—ã–π –¥–µ–Ω—å',
                intro: `–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ ${process.env.APP_NAME}: <b>${this.code}</b>.`,
                outro: '–ü–∏—Å—å–º–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.',
                signature: '–° —É–≤–∞–∂–µ–Ω–∏–µ–º',
            },
        });
        return { html, subject: '–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è' };
    }

    via(): string[] {
        return ['mail'];
    }
}