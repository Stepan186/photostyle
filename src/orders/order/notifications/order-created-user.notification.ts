import { BaseNotification } from '../../../notifications/channels/base/base-notification';
import { Order } from '../entities/order.entity';
import {
    IEmail,
    IEmailNotification,
    IMailNotifiable,
} from '../../../notifications/channels/email/email-notification.channel';
import { createMailgen } from '../../../email-utils/create-mailgen';

export class OrderCreatedUserNotification extends BaseNotification implements IEmailNotification {
    order: Order;

    constructor(order: Order) {
        super();
        this.order = order;
    }

    public via(): string[] {
        return ['mail'];
    }

    public toMail(_notifiable: IMailNotifiable): IEmail {
        const email = {
            body: {
                name: this.order.user.fullName,
                intro: '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω!',
                action: {
                    instructions: '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –∑–∞–∫–∞–∑ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–∫–∞–∑–∞:',
                    button: {
                        color: '#22BC66',
                        text: '–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑—É',
                        link: `${process.env.FRONTEND_URL}/user/orders-${this.order.uuid}`,
                    },
                },
                greeting: 'üëã',
                outro: '–ü–∏—Å—å–º–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.',
                signature: '–° —É–≤–∞–∂–µ–Ω–∏–µ–º',
            },
        };
        const html = createMailgen().generate(email);
        return { html, subject: '‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω' };


    }

    public toTelegram(_notifiable: any): string {
        return `–£–≤–∞–∂–∞–µ–º—ã–π ${this.order.user.fullName}, –≤–∞—à –∑–∞–∫–∞–∑ ‚Ññ${this.order.id} —Å–æ–∑–¥–∞–Ω!`;
    }
}